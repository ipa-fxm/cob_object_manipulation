<?xml version="1.0"?>
<launch>

	<!-- set stereo to true for stereo, false for kinect -->
	<arg name="stereo" default="false" />

	<!-- client for object database running on remote server at Willow Garage -->
	<!-- DOES NOT WORK IN TRUNK RIGHT NOW -->
	<!--
	<include file="$(find household_objects_database)/launch/objects_database_remote_client.launch"/>
	-->

	<!-- alternative option: database server running on a local machine -->
        <param name="/household_objects_database/database_host" value="cob3-3-pc2"/>
        <param name="/household_objects_database/database_port" value="5432"/>
        <param name="/household_objects_database/database_user" value="ipa"/>
        <param name="/household_objects_database/database_pass" value="ipa"/>
        <param name="/household_objects_database/database_name" value="household_objects-0.5"/>

	<node pkg="household_objects_database" name="objects_database_node" type="objects_database_node" respawn="true" output="screen"/>

	<!-- manipulation prerequisites all includede in the cob3_3_arm_navigation pkg -->
	<node name="interpolated_ik_node_cob3_3" pkg="interpolated_ik_motion_planner" type="interpolated_ik_motion_planner.py" args="c" respawn="false"/>
	<include file="$(find cob3_3_arm_navigation)/launch/cob3_3_arm_navigation.launch"/>

	<!-- manipulation -->
	<include file="$(find cob_object_manipulation_launch)/launch/cob_object_manipulation.launch"/>
	<param name="/object_manipulator/default_database_planner" value="/objects_database_node/database_grasp_planning" />
	<param name="/object_manipulator/default_robust_planner" value="/plan_robust_grasp" />
	<!-- tabletop segmentation and object recognition -->
	<!--machine name="pc2" address="cob3-3-pc2" default="true"/-->
	<include file="$(find tabletop_object_detector)/launch/tabletop_complete.launch">
		<arg unless="$(arg stereo)" name="tabletop_segmentation_points_input" value="cam3d/depth/points"/>
		<arg if="$(arg stereo)" name="tabletop_segmentation_points_input" value="/sensor_fusion/points"/>
	</include>

	<!-- tabletop collision map processing -->
	<node pkg="tabletop_collision_map_processing" name="tabletop_collision_map_processing" type="tabletop_collision_map_processing_node" respawn="false" output="screen"/>
	<param name="tabletop_collision_map_processing/get_model_mesh_srv" value="/objects_database_node/get_model_mesh" />
	<param name="tabletop_collision_map_processing/static_map_cloud_name" value="full_cloud_filtered" />

</launch>
